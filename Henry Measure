from __future__ import division
import csv
import string
import pandas as pd
from pandas import DataFrame

csv_file="output.csv"
excel_file="output_try2_randomized_cut.xlsx"

POS_WORDLIST_FILENAME ="POS.txt"
NEG_WORDLIST_FILENAME="NEG.txt"
POSH_WORDLIST_FILENAME ="POSH.txt"
NEGH_WORDLIST_FILENAME="NEGH.txt"
path="counting.csv"

inFile = open(POS_WORDLIST_FILENAME, 'r')
pos_wordlist=[i.strip() for i in inFile]
print("  ", len(pos_wordlist), "words loaded.")

inFile = open(NEG_WORDLIST_FILENAME, 'r')
neg_wordlist=[i.strip() for i in inFile]
print("  ", len(neg_wordlist), "words loaded.")

inFile = open(POSH_WORDLIST_FILENAME, 'r')
posh_wordlist=[i.strip().upper() for i in inFile]
print("  ", len(posh_wordlist), "words loaded.")

inFile = open(NEGH_WORDLIST_FILENAME, 'r')
negh_wordlist=[i.strip().upper() for i in inFile]
print("  ", len(negh_wordlist), "words loaded.")

saved_column=pd.read_excel(excel_file, 'Sheet1', parse_cols='C')
saved_column=saved_column.values.tolist()
#print saved_column

positive_counter_total=0
negative_counter_total=0
pos_count=[]
neg_count=[]

h_positive_counter_total=0
h_negative_counter_total=0
h_pos_count=[]
h_neg_count=[]
word_countZ=[]
h_tone_1_count=[]
h_tone_2_count=[]

for y in saved_column:
     for i in y:
          #Tokenization kan ook met NLTK of Sci-kit learn
          i=i.upper()
          i= i.replace('!', '').replace('.','').replace('?','').replace(',','')
          i=i.split(' ')
          #dit werkt en word count ook
          word_count=len(i)
          #print word_count
          positive_counter=0
          negative_counter=0
          h_positive_counter=0
          h_negative_counter=0
          for z in i:
               if z in pos_wordlist:
                    positive_counter+=1
                    positive_counter_total+=1
               if z in neg_wordlist:
                    negative_counter+=1
                    negative_counter_total+=1
               if z in posh_wordlist:
                    h_positive_counter+=1
                    h_positive_counter_total+=1
               if z in negh_wordlist:
                    h_negative_counter+=1
                    h_negative_counter_total+=1
          print h_negative_counter
          if h_negative_counter!=0:
          #create the tonal measures?
               h_tone_1=((h_positive_counter/word_count)/(h_negative_counter/word_count))
               h_tone_2=((h_positive_counter/word_count)-(h_negative_counter/word_count))/((h_positive_counter/word_count)+(h_negative_counter/word_count))
               h_tone_1_count.append(h_tone_1)
               h_tone_2_count.append(h_tone_2)
               h_pos_count.append(h_positive_counter)
               h_neg_count.append(h_negative_counter)
               word_countZ.append(word_count)
          else:
               h_tone_1_count.append("NA")
               h_tone_2_count.append("NA")
               h_pos_count.append(h_positive_counter)
               h_neg_count.append(h_negative_counter)
               word_countZ.append(word_count)


#print h_pos_count
#print word_countZ
output=[h_pos_count,h_neg_count,word_countZ,h_tone_1_count,h_tone_2_count]

output=zip(*output)

df=DataFrame({'h_pos_count':h_pos_count,'h_neg_count':h_neg_count,'word_countZ':word_countZ,'h_tone_1_count':h_tone_1_count,'h_tone_2_count':h_tone_2_count})

#df=DataFrame({'pos_scores':pos_scores, 'neg_scores':neg_scores})
df.to_excel('SCORES.xlsx',sheet_name='sheet1', index=False)


#print h_pos_count
#Henry
#Positive/negative
#Positive-negative/positive+negative
#Loughran
#NBC
